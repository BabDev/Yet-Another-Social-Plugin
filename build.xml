<?xml version="1.0" encoding="UTF-8"?>
<project name="yetanothersocial" default="dev_head" basedir=".">
	<!-- Project properties -->
	<property name="repo.dir" value="." />
	<property name="version" value="2.0.0" />
	<tstamp>
		<format property="build.date" pattern="yyyy-MM-dd" />
	</tstamp>

	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args/>
			</exec>
		</sequential>
	</macrodef>

	<!-- Build a package for testing -->
	<target name="dev_head" description="Builds test packages based on the development head" depends="rebuild-packages,build-temp">
		<echo message="Deleting old master build" />
		<delete includeemptydirs="true">
			<fileset dir=".">
				<include name="plg_content_yetanothersocial_master.zip" />
			</fileset>
		</delete>
		<echo message="Build package" />
		<zip destfile="plg_content_yetanothersocial_master.zip">
			<fileset dir="packages">
				<include name="**" />
			</fileset>
		</zip>
	</target>

	<!-- Build a package for release -->
	<target name="release" description="Builds a release package" depends="rebuild-packages,build-temp">
		<echo message="Build package" />
		<zip destfile="releases/plg_content_yetanothersocial_${version}.zip">
			<fileset dir="packages">
				<include name="**" />
			</fileset>
		</zip>
		<echo message="Committing version" />
		<git command="commit">
			<args>
				<arg value="-am 'Prepare ${version} release'" />
			</args>
		</git>
		<echo message="Creating Git tag" />
		<git command="tag">
			<args>
				<arg value="${version}" />
			</args>
		</git>
		<echo message="Pushing Version commit and tag to GitHub" />
		<git command="push">
		</git>
		<git command="push">
			<args>
				<arg value="--tags" />
			</args>
		</git>
	</target>

	<!-- Copy files to staging to allow for manipulation pre-package -->
	<target name="build-temp" description="Stages the files" depends="rebuild-packages">
		<echo message="Create temp folder" />
		<mkdir dir="packages" />
		<echo message="Copy files" />
		<copy todir="packages/language">
			<fileset dir="language" />
		</copy>
		<copy todir="packages/media">
			<fileset dir="media" />
		</copy>
		<copy todir="packages/tmpl">
			<fileset dir="tmpl" />
		</copy>
		<copy todir="packages">
			<fileset dir=".">
				<include name="script.php" />
				<include name="yetanothersocial.php" />
				<include name="yetanothersocial.xml" />
			</fileset>
	    </copy>
		<replace file="packages/yetanothersocial.xml" token="##DATE##" value="${build.date}" />
		<replace file="packages/yetanothersocial.xml" token="##VERSION##" value="${version}" />
	</target>

	<target name="rebuild-packages" description="Delete old packages">
		<echo message="Deleting packages dir" />
		<delete quiet="yes" includeemptydirs="true">
			<fileset dir="*">
				<include name="packages" />
			</fileset>
		</delete>
		<echo message="Creating packages dir" />
		<mkdir dir="packages" />
	</target>

	<!-- Check code style based on Joomla Coding Standard -->
	<target name="phpcs" description="Generate codestyle report using PHP_CodeSniffer">
		<echo message="Remove previous codestyle report" />
		<delete quiet="yes" includeemptydirs="true">
			<fileset dir=".">
				<include name="build/logs/checkstyle.xml" />
			</fileset>
		</delete>
		<echo message="Running phpcs with Joomla! Coding Standard" />
		<exec executable="phpcs">
			<arg value="--report=checkstyle" />
			<arg value="--extensions=php" />
			<arg value="-p" />
			<arg value="--report-file=${repo.dir}/build/logs/checkstyle.xml" />
			<arg value="--standard=${repo.dir}/build/phpcs/Joomla" />
			<arg value="--ignore=${repo.dir}/packages,${repo.dir}/releases,${repo.dir}/tmpl" />
			<arg path="${repo.dir}" />
		</exec>
	</target>
</project>
